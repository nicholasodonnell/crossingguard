version: "3.5"
services:

  grafana:
    build:
      context: ./grafana
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_USERS_ALLOW_SIGN_UP=false
    env_file:
      - .env
    expose:
      - 3000
    image: crossingguard/grafana:latest
    networks:
      - crossingguard

  prometheus:
    build:
      context: ./prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/config"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    container_name: prometheus
    env_file:
      - .env
    expose:
      - 9090
    image: crossingguard/prometheus:latest
    networks:
      - crossingguard

  traefik:
    build:
      context: ./traefik
    command:
      # Docker configuration
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${EXTERNAL_NETWORK}"
      - "--providers.docker=true"

      # Configure entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # SSL configuration
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"

        # Global HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"

      # Enable Dashboard
      - "--api.insecure=true"

      # Prometheus
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    container_name: traefik
    env_file:
      - .env
    expose:
      - 80
      - 443
      - 8080
    image: crossingguard/traefik:latest
    networks:
      - crossingguard
      - external

networks:
  crossingguard:
    driver: bridge
    name: crossingguard
  external:
    external:
      name: ${EXTERNAL_NETWORK}
